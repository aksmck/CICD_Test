CREATE TABLE IF NOT EXISTS $$unity_catalog_name.$$schema_name.$$delta_table_name
(
  BUSINESS_UNIT STRING,
  SEGMENT_NAME STRING,
  SOURCE_SYSTEM_NAME STRING,
  THRPUTC_CLASS_SKEY bigint GENERATED BY DEFAULT AS IDENTITY,
  THRPUTC_CLASS_CD STRING COMMENT 'Therapeutic Class Code; SOURCE: THRPUTC_CLASS_CD',
  THRPUTC_CLASS_DSCRPTN STRING COMMENT 'Therapeutic Class Description; SOURCE: THRPUTC_CLASS_DSCRPTN',
  EFFECTIVE_DATE DATE comment 'Record Effective Date', 
  EXPIRATION_DATE DATE comment 'Record Expiration Date',
  CURR_FLG STRING comment 'Flag records as Y if expiration date > current date and start date < current date; otherwise, flag as N',
  ADF_RUN_ID STRING COMMENT 'ID for specific pipeline run loaded from landing. This run_id gets generated when the records gets loaded from source to landing',
  ADF_JOB_ID STRING COMMENT 'ID of the trigger that invokes the pieline. This job_id gets generated when the records gets loaded from source to landing',
  RECORD_LOAD_TIME TIMESTAMP DEFAULT current_timestamp COMMENT 'This is the default generated column using current timestamp when the record is loaded in the table',
  INPUT_FILE_NAME STRING COMMENT 'File name which is getting populated from bronze layer',
  DATABRICKS_RUN_ID STRING COMMENT 'run id of the Databricks job run. This gets generated from the silver notebook run',
  DATABRICKS_JOB_ID STRING COMMENT 'job id of the Databricks job run. This gets generated from the silver notebook run',
  INSERT_TS TIMESTAMP COMMENT 'Timestamp when the Record was Inserted',
  UPDATE_TS TIMESTAMP COMMENT 'Timestamp when the Record was Inserted',
  INTEGRATION_KEY STRING COMMENT 'Hash key created using combination of all the columns except the housekeeping columns',
  DATE_PART date GENERATED ALWAYS AS (DATE(RECORD_LOAD_TIME)) COMMENT 'This the date part generated from Record load time column',
  HOUR_PART INT GENERATED ALWAYS AS (HOUR(RECORD_LOAD_TIME)) COMMENT 'This the hour part generated from Record load time column'
)
USING DELTA
PARTITIONED BY (DATE_PART,HOUR_PART)
LOCATION '$$delta_table_location'
TBLPROPERTIES (
  'delta.feature.allowColumnDefaults' = 'supported',
  'delta.feature.appendOnly' = 'supported',
  'delta.feature.invariants' = 'supported',
  'delta.minReaderVersion' = '1',
  'delta.minWriterVersion' = '7',
  'delta.enableChangeDataFeed' = true,
  'spark.sql.files.ignoreMissingFiles'= true,
  'delta.autoOptimize.optimizeWrite' = true);
INSERT INTO $$unity_catalog_name.$$schema_name.$$delta_table_name (
  THRPUTC_CLASS_SKEY,
  THRPUTC_CLASS_CD,
  BUSINESS_UNIT,
  SEGMENT_NAME,
  SOURCE_SYSTEM_NAME,
  THRPUTC_CLASS_DSCRPTN,
  EFFECTIVE_DATE,
  EXPIRATION_DATE,
  CURR_FLG,
  ADF_RUN_ID,
  ADF_JOB_ID,
  DATABRICKS_RUN_ID,
  DATABRICKS_JOB_ID,
  INPUT_FILE_NAME,
  INTEGRATION_KEY,
  INSERT_TS,
  UPDATE_TS
) VALUES (
  -9999,
  'NA',
  'PSAS',
  'US Pharma',
  'BHP',
  'NA',
  NULL,
  NULL,
  'NA',
  'NA',
  'NA',
  'NA',
  'NA',
  'NA',
  'NA',
  NULL,
  NULL
);
