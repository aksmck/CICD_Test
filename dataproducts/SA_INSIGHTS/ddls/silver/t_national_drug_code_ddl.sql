CREATE TABLE IF NOT EXISTS $$unity_catalog_name.$$schema_name.$$delta_table_name (
  NDC_NUM STRING COMMENT 'National Drug Code Unique Identifier/Number; SOURCE: NDC_NUM',
  GNRC_NAME STRING COMMENT 'Generic Name of the Drug; SOURCE: GNRC_NAM',
  PREV_NDC_NUM STRING COMMENT 'Previous National Drug Code Number; SOURCE: PREV_NDC_NUM',
  OBSOLETE_DT TIMESTAMP COMMENT 'Obsolete Date of the NDC; SOURCE: OBSOLETE_DT',
  DOSE_FRM_DSCRPTN STRING COMMENT 'Description of the Dose Form; SOURCE: DOSE_FORM_DSCR',
  DRG_STRNTH_DSCRPTN STRING COMMENT 'Description of the Drug Strength; SOURCE: DRG_STRNTH_DSCR',
  GNRC_NDCTR STRING COMMENT 'Indicator for whether the Drug is generic; SOURCE: GNRC_IND',
  GNRC_CD_NUM STRING COMMENT 'Generic Code Number of the Drug; SOURCE: GNRC_CD_NUM',
  THRPUTC_CLASS_CD STRING COMMENT 'Therapeutic Class Code; SOURCE: THERA_CLS_CD',
  SPECIF_THRPUTC_CLASS_CD STRING COMMENT 'Specific Therapeutic Class Code; SOURCE: SPECIFIC_THERA_CLS_CD',
  PKG_SZ DECIMAL(38,18) COMMENT 'Package Size; SOURCE: PKG_SIZ',
  DRG_FRM_CD STRING COMMENT 'Drug Form Code; SOURCE: DRG_FORM_CD',
  ADMIN_RTE_CD STRING COMMENT 'Admin RTE Code; SOURCE: ADMIN_RTE_CD',
  GNRC_CD_NUM_SEQ STRING COMMENT 'Generic Code Number Sequence; SOURCE: GNRC_CD_NUM_SEQ',
  REPL_NDC_NUM STRING COMMENT 'Replicate NDC Number; SOURCE: REPL_NDC_NUM',
  DEA_CD STRING COMMENT 'DEA Code; SOURCE: DEA_CD',
  ADTL_DSCRPTN STRING COMMENT 'Additional Description; SOURCE: ADTL_DSCR',
  BRND_NAME STRING COMMENT 'Brand Name of the Drug; SOURCE: BRND_NAM',
  GNRC_PRC_NDCTR STRING COMMENT 'Generic Price Indicator; SOURCE: GNRC_PRC_IND',
  LBL_NAM STRING COMMENT 'Label Name; SOURCE: LBL_NAM',
  MFR_NAM STRING COMMENT 'Manufacturer Name; SOURCE: MFR_NAM',
  NDC_CNFG_NDCTR STRING COMMENT 'NDC Configuration Indicator; SOURCE: NDC_CNFG_IND',
  PKG_DSCRPTN STRING COMMENT 'Package Description; SOURCE: PKG_DSCR',
  RTE_DSCRTN STRING COMMENT 'Rate Description; SOURCE: RTE_DSCR',
  TOP_200_NDCTR STRING COMMENT 'Top 200 Indicator of the Drug; SOURCE: TOP_200_IND',
  UNIT_DOSE_NDCTR STRING COMMENT 'Unit Dose Indicator; SOURCE: UNIT_DOSE_IND',
  FFP_UL_CURR_EFFECTIVE_DT TIMESTAMP COMMENT 'FFP UL Current Effective Date; SOURCE: FFP_UL_CUR_EFF_DT',
  FFP_UL_CURR_UNIT_PRC DECIMAL(38,18) COMMENT 'FFP UL Current Unit Price; SOURCE: FFP_UL_CUR_UNIT_PRC',
  GNRC_THRPUTC_CLASS_CD STRING COMMENT 'Generic Therapeutic Class Code; SOURCE: GNRC_THERA_CLS_CD',
  STNDRD_THRPUTC_CLASS_CD STRING COMMENT 'Standard Therapeutic Class Code; SOURCE: STD_THERA_CLS_CD',
  DRG_CLASS_CD STRING COMMENT 'Drug Classification Code; SOURCE: DRG_CLS_CD',
  INGR_CD_NUM STRING COMMENT 'Ingredient Code Number; SOURCE: INGR_CD_NUM',
  ORANGE_BK_CD STRING COMMENT 'Orange Book Code; SOURCE: ORANGE_BOOK_CD',
  CURR_BLU_BK_EFFECTIVE_DT TIMESTAMP COMMENT 'Current Blu Book Effective Date; SOURCE: CUR_BLU_BOOK_EFF_DT',
  CURR_BLU_BK_UNIT_PRC DECIMAL(38,18) COMMENT 'Current Blu Book Unit Price; SOURCE: CUR_BLU_BOOK_UNIT_PRC',
  CURR_BLU_BK_PKG_DT TIMESTAMP COMMENT 'Current Blu Package Date; SOURCE: CUR_BLU_BOOK_PKG_DT',
  CURR_BLU_BK_PKG_PRC DECIMAL(38,18) COMMENT 'Current Blu Package Price; SOURCE: CUR_BLU_BOOK_PKG_PRC',
  LBLR_ID STRING COMMENT 'LBLR ID; SOURCE: LBLR_ID',
  PATENT_EXPIRATION_DT TIMESTAMP COMMENT 'Patent Expiration Date; SOURCE: PATENT_EXPIR_DT',
  EXCLSVTY_EXPIRATION_DT TIMESTAMP COMMENT 'Exclusivity Expiration Date; SOURCE: EXCLUSIVITY_EXPIR_DT',
  DRG_STRNTH_NUM DECIMAL(38,18) COMMENT 'Drug Strength Number; SOURCE: DRG_STRNTH_NUM',
  SHLF_PACK_NUM BIGINT COMMENT 'Shelf Pack Number; SOURCE: SHLF_PACK_NUM',
  PTNT_PKG_INSERT_NDCTR STRING COMMENT 'Patient Package Insert Indicator; SOURCE: PATIENT_PKG_ISRT_IND',
  DISPENSE_CNT DECIMAL(38,18) COMMENT 'Dispense Count; SOURCE: DSPNS_CNT',
  UPD_DT TIMESTAMP COMMENT 'Update Timestamp; SOURCE: UPDT_DTS',
  CRTE_DT TIMESTAMP COMMENT 'Created Timestamp; SOURCE: CRTE_DTS',
  _rescued_data STRING COMMENT 'Rescued data',
  ADF_RUN_ID STRING COMMENT 'ID for specific pipeline run loaded from landing. This run_id gets generated when the records gets loaded from source to landing',
  ADF_JOB_ID STRING COMMENT 'ID of the trigger that invokes the pieline. This job_id gets generated when the records gets loaded from source to landing',
  RECORD_LOAD_TIME TIMESTAMP DEFAULT current_timestamp COMMENT 'This is the default generated column using current timestamp when the record is loaded in the table',
  INPUT_FILE_NAME STRING COMMENT 'File name which is getting populated from bronze layer',
  DATABRICKS_RUN_ID STRING COMMENT 'run id of the Databricks job run. This gets generated from the silver notebook run',
  DATABRICKS_JOB_ID STRING COMMENT 'job id of the Databricks job run. This gets generated from the silver notebook run',
  INSERT_TS TIMESTAMP COMMENT 'This is the default generated column using current timestamp when the record is loaded in the table',
  UPDATE_TS TIMESTAMP COMMENT 'This is the default generated column using current timestamp when the record is loaded in the table',
  INTEGRATION_KEY STRING COMMENT 'Hash key created using combination of all the columns except the housekeeping columns',
  DATE_PART DATE GENERATED ALWAYS AS (DATE(RECORD_LOAD_TIME)) COMMENT 'This the date part generated from Record load time column',
  HOUR_PART INT GENERATED ALWAYS AS (HOUR(RECORD_LOAD_TIME)) COMMENT 'This the hour part generated from Record load time column'
) USING DELTA PARTITIONED BY (DATE_PART, HOUR_PART) LOCATION '$$delta_table_location' TBLPROPERTIES (
'delta.feature.allowColumnDefaults' = 'supported',
'delta.feature.appendOnly' = 'supported',
'delta.feature.invariants' = 'supported',
'delta.minReaderVersion' = '1',
'delta.minWriterVersion' = '7',
'delta.enableChangeDataFeed' = true,
'spark.sql.files.ignoreMissingFiles' = true,
'delta.autoOptimize.optimizeWrite' = true);