name: Publish ADF Data Flows

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: string
        required: true
      function_name:
        description: 'Data source'
        type: string
        required: true
      date:
        description: 'Commit date'
        type: string
        required: true

env:
  ENVIRONMENT: ${{ inputs.environment }}
  DATE: ${{ inputs.date }}
  FUNCTION_NAME: ${{ inputs.function_name }}
  BRANCH: ${{ github.ref_name }}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install Azure CLI datafactory extension
        run: |
          az extension add --name datafactory

      - name: Get changed data flow files since provided date
        id: changed-files-since
        uses: tj-actions/changed-files@v37
        with:
          since: ${{ env.DATE }}
          files: dataproducts/${{ env.FUNCTION_NAME }}/dataflows

      - name: Validate and Debug JSON Files
        run: |
          CHANGED_FILES="${{ steps.changed-files-since.outputs.all_changed_files }}"
          echo "Changed files: $CHANGED_FILES"

          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No changed files detected."
            exit 0
          fi

          for file in $CHANGED_FILES; do
            echo "Processing file $file"
            if [[ -f "$file" && "$file" == *.json ]]; then
              echo "Validating file: $file"
              cat "$file"

              # Validate JSON structure
              if jq empty "$file"; then
                echo "Valid JSON: $file"
              else
                echo "Invalid JSON structure in $file"
                exit 1
              fi
            else
              echo "Skipping invalid or missing file: $file"
              exit 1
            fi
          done

      - name: Publish ADF Data Flows
        run: |
          # Authenticate based on the environment
          if [[ $ENVIRONMENT == dev ]]; then
            az login --service-principal --username ${{ secrets.CLIENT }} --password ${{ secrets.CLIENTSECRET }} --tenant ${{ secrets.TENANT }}
            az account set -s ${{ secrets.SUBSCRIPTION_ID }}
            FACTORY_NAME=adf-psasdi-westus-dev-01
            RESOURCE_GROUP=rg-psas-decision-intelligence-westus-dev
          elif [[ $ENVIRONMENT == qa ]]; then
            az login --service-principal --username ${{ secrets.CLIENT_ID_QAT }} --password ${{ secrets.CLIENT_SECRET_QAT }} --tenant ${{ secrets.TENANT_ID_QAT }}
            az account set -s ${{ secrets.SUBSCRIPTION_ID_QAT }}
            FACTORY_NAME=${{ secrets.FACTORY_NAME_QAT }}
            RESOURCE_GROUP=${{ secrets.RESOURCE_GROUP_QAT }}
          elif [[ $ENVIRONMENT == prod ]]; then
            az login --service-principal --username ${{ secrets.CLIENT_ID_PROD }} --password ${{ secrets.CLIENT_SECRET_PROD }} --tenant ${{ secrets.TENANT_ID_PROD }}
            az account set -s ${{ secrets.SUBSCRIPTION_ID_PROD }}
            FACTORY_NAME=${{ secrets.FACTORY_NAME_PROD }}
            RESOURCE_GROUP=${{ secrets.RESOURCE_GROUP_PROD }}
          fi

          az account show
          echo "Logged in successfully"

          CHANGED_FILES="${{ steps.changed-files-since.outputs.all_changed_files }}"
          echo "Files to deploy: $CHANGED_FILES"

          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No data flow changes detected."
            exit 0
          fi

          for file in $CHANGED_FILES; do
            echo "Processing file $file"
            if [[ -f "$file" && "$file" == *.json ]]; then
              dataflow_name=$(basename "$file" .json)
              echo "Deploying data flow: $dataflow_name"

              # Print the content of the file
              cat "$file"

              # Validate 'properties' field
              if jq -e '.properties' "$file" >/dev/null; then
                URL="https://management.azure.com/subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DataFactory/factories/$FACTORY_NAME/dataflows/$dataflow_name?api-version=2018-06-01"

                echo "Deploying to URL: $URL"
                token=$(az account get-access-token --query 'accessToken' -o tsv)
                response=$(curl -X PUT -H "Content-Type: application/json" \
                    -H "Authorization: Bearer $token" \
                    -d @"$file" "$URL" 2>&1)
                echo "Response: $response"

                if echo "$response" | grep -q 'error'; then
                  echo "Error deploying $dataflow_name: $response"
                  exit 1
                else
                  echo "Successfully deployed $dataflow_name"
                fi
              else
                echo "Error: 'properties' field missing in $file"
                exit 1
              fi
            else
              echo "Skipping invalid file: $file"
            fi
          done
