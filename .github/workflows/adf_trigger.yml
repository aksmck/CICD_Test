name: Publish ADF Triggers

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        type: string
        required: true
      function_name:
        description: 'Data source'
        type: string
        required: true
      date:
        description: 'Commit date'
        type: string
        required: true

env:
  ENVIRONMENT: ${{ inputs.environment }}
  DATE: ${{ inputs.date }}
  FUNCTION_NAME: ${{ inputs.function_name }}
  BRANCH: ${{ github.ref_name }}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install Azure Data Factory extension
        run: |
          az extension add --name datafactory

      - name: Get changed files since provided date
        id: changed-files-since
        uses: tj-actions/changed-files@v37
        with:
          since: "${{ env.DATE }}"
          files: "dataproducts/${{ env.FUNCTION_NAME }}/triggers/"

      - name: Print changed files
        run: |
          echo "Changed files since date: ${{ steps.changed-files-since.outputs.all_changed_files }}"

      - name: Check if there are changes for ADF trigger steps
        run: |
          CHANGED_FILES="${{ steps.changed-files-since.outputs.all_changed_files }}"
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No changes detected for triggers after ${{ env.DATE }}."
            exit 0
          fi

      - name: Publish ADF Triggers
        run: |
          # Authentication for dev, qa, prod
          if [[ $ENVIRONMENT == 'dev' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT }}" --password "${{ secrets.CLIENTSECRET }}" --tenant "${{ secrets.TENANT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID }}
            FACTORY_NAME="adf-psasdi-westus-dev-01"
            RESOURCE_GROUP="rg-psas-decision-intelligence-westus-dev"
          elif [[ $ENVIRONMENT == 'qa' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_QAT }}" --password "${{ secrets.CLIENT_SECRET_QAT }}" --tenant "${{ secrets.TENANT_ID_QAT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_QAT }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_QAT }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_QAT }}"
          elif [[ $ENVIRONMENT == 'prod' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_PROD }}" --password "${{ secrets.CLIENT_SECRET_PROD }}" --tenant "${{ secrets.TENANT_ID_PROD }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_PROD }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_PROD }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_PROD }}"
          fi

          # Confirm authentication worked
          az account show

          echo "Logged in successfully"

          # Deploy triggers
          CHANGED_FILES="${{ steps.changed-files-since.outputs.all_changed_files }}"
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No triggers to deploy."
            exit 0
          fi

          echo "Changed files: $CHANGED_FILES"

          for file in $CHANGED_FILES; do
            if [[ -f "$file" && "$file" == *".json" ]]; then
              echo "Deploying trigger: $file"
              trigger_name=$(basename "$file" .json)

              # Extract trigger properties using jq
              trigger_properties=$(cat "$file")

              # Deploy the trigger with the extracted properties
              az datafactory trigger create \
                --factory-name "$FACTORY_NAME" \
                --resource-group "$RESOURCE_GROUP" \
                --name "$trigger_name" \
                --properties "$trigger_properties"
            else
              echo "Skipping non-JSON file: $file"
            fi
          done
