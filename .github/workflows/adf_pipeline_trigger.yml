name: Trigger Existing ADF Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (dev, qa, prod)'
        type: string
        required: true
      function_name:
        description: 'Data source function name'
        type: string
        required: true
      pipeline_name:
        description: 'Name of the existing pipeline JSON file (with extension)'
        type: string
        required: true

env:
  ENVIRONMENT: ${{ inputs.environment }}
  FUNCTION_NAME: ${{ inputs.function_name }}
  PIPELINE_NAME: ${{ inputs.pipeline_name }}
  BRANCH: ${{ github.ref_name }}

jobs:
  trigger_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Authenticate with Azure
        run: |
          # Authentication for dev, qa, prod
          if [[ $ENVIRONMENT == 'dev' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT }}" --password "${{ secrets.CLIENTSECRET }}" --tenant "${{ secrets.TENANT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID }}
            FACTORY_NAME="adf-psasdi-westus-dev-01"
            RESOURCE_GROUP="rg-psas-decision-intelligence-westus-dev"
          elif [[ $ENVIRONMENT == 'qa' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_QAT }}" --password "${{ secrets.CLIENT_SECRET_QAT }}" --tenant "${{ secrets.TENANT_ID_QAT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_QAT }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_QAT }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_QAT }}"
          elif [[ $ENVIRONMENT == 'prod' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_PROD }}" --password "${{ secrets.CLIENT_SECRET_PROD }}" --tenant "${{ secrets.TENANT_ID_PROD }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_PROD }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_PROD }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_PROD }}"
          fi

          # Confirm authentication worked
          az account show

          echo "Logged in successfully"

      - name: Trigger ADF Pipeline Run
        run: |
          echo "Triggering pipeline '${{ env.PIPELINE_NAME }}' in ADF..."
          
          # Construct the full path to the JSON file
          JSON_FILE_PATH="dataproducts/${{ env.FUNCTION_NAME }}/pipelines/master/${{ env.PIPELINE_NAME }}"

          # Check if the file exists before triggering the pipeline
          if [[ -f "$JSON_FILE_PATH" ]]; then
            az datafactory pipeline create-run \
              --resource-group $RESOURCE_GROUP \
              --factory-name $FACTORY_NAME \
              --name "${{ env.PIPELINE_NAME }}"  # Removed parameters
            
            echo "Pipeline '${{ env.PIPELINE_NAME }}' triggered successfully."
          else
            echo "Error: File not found - $JSON_FILE_PATH"
            exit 1
