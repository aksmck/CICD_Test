name: Trigger ADF Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (e.g., dev, qa, prod)'
        type: string
        required: true
      function_name:
        description: 'Data source (e.g., MPB-MNC, SA_INSIGHTS)'
        type: string
        required: true
      date:
        description: 'Commit date (YYYY-MM-DD)'
        type: string
        required: true
      adf_pipeline_json:
        description: 'ADF pipeline JSON file name (e.g., pipeline_file.json)'
        type: string
        required: true

env:
  ENVIRONMENT: ${{ inputs.environment }}
  DATE: ${{ inputs.date }}
  FUNCTION_NAME: ${{ inputs.function_name }}
  ADF_PIPELINE_JSON: ${{ inputs.adf_pipeline_json }}
  BRANCH: ${{ github.ref_name }}

jobs:
  trigger:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}

      - name: Get changed files since the specified date
        id: changed-files-since
        run: |
          # Fetch the list of files changed since the given date
          git fetch --prune --unshallow
          changed_files=$(git diff --name-only --since="${{ inputs.date }}")
          echo "Changed files since ${ { inputs.date }}: $changed_files"
          echo "::set-output name=all_changed_files::${changed_files}"

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Set up environment variables for Azure
        run: |
          if [[ $ENVIRONMENT == 'dev' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT }}" --password "${{ secrets.CLIENTSECRET }}" --tenant "${{ secrets.TENANT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID }}
            FACTORY_NAME="adf-psasdi-westus-dev-01"
            RESOURCE_GROUP="rg-psas-decision-intelligence-westus-dev"
          elif [[ $ENVIRONMENT == 'qa' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_QAT }}" --password "${{ secrets.CLIENT_SECRET_QAT }}" --tenant "${{ secrets.TENANT_ID_QAT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_QAT }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_QAT }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_QAT }}"
          elif [[ $ENVIRONMENT == 'prod' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_PROD }}" --password "${{ secrets.CLIENT_SECRET_PROD }}" --tenant "${{ secrets.TENANT_ID_PROD }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_PROD }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_PROD }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_PROD }}"
          fi

          # Confirm authentication worked
          az account show

      - name: Check if the ADF pipeline JSON file exists
        run: |
          # Define the pipeline file path
          PIPELINE_PATH="dataproducts/${{ env.FUNCTION_NAME }}/pipelines/master/${{ env.ADF_PIPELINE_JSON }}"

          # Check if the specified pipeline JSON file exists in the repository
          if [[ -f "$PIPELINE_PATH" ]]; then
            echo "ADF pipeline JSON file found: $PIPELINE_PATH"
          else
            echo "ADF pipeline JSON file not found: $PIPELINE_PATH"
            exit 1  # Fail the job if the file does not exist
          fi

      - name: Deploy and Trigger ADF Pipeline
        run: |
          # Define the pipeline file path
          PIPELINE_PATH="dataproducts/${{ env.FUNCTION_NAME }}/pipelines/master/${{ env.ADF_PIPELINE_JSON }}"

          # Deploy the pipeline using the file content from the repository
          echo "Deploying pipeline: $PIPELINE_PATH"
          pipeline_name=${{ env.ADF_PIPELINE_JSON }}
          pipeline_name=${pipeline_name%.*}  # Remove file extension

          # Deploy the pipeline using the file content
          az datafactory pipeline create --factory-name $FACTORY_NAME --resource-group $RESOURCE_GROUP --pipeline @$PIPELINE_PATH --name "$pipeline_name"

          # Trigger the pipeline execution
          echo "Triggering ADF pipeline execution..."
          az datafactory pipeline run --factory-name $FACTORY_NAME --resource-group $RESOURCE_GROUP --pipeline-name "$pipeline_name"
