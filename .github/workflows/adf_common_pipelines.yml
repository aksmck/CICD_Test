name: Publish Common ADF Pipelines

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        type: choice
        options:
          - dev
          - qa
          - prod
        required: true
      pipeline_name:
        description: 'Select pipeline to deploy'
        type: choice
        options: 
          - all
          - brnz_to_slvr_dq_integrated
          - psasdi_10000_master_orchestrator
        required: true
      date:
        description: 'Deploy changes after a commit date in YYYY-MM-DD format (OPTIONAL)'
        type: string
        default: '1999-01-01'
        required: true

env:
  ENVIRONMENT: ${{ inputs.environment }}
  DATE: ${{ inputs.date }}
  BRANCH: ${{ github.ref_name }}

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}  # Checkout the branch triggered by the master workflow

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Get changed files since provided date
        id: changed-files-since
        uses: tj-actions/changed-files@v37
        with:
          since: "${{ env.DATE }}"
          files: "bronze_silver/*/${{ env.ENVIRONMENT }}/pipeline/"

      - name: Publish ADF Pipelines
        run: |
          if [[ $ENVIRONMENT == 'dev' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT }}" --password "${{ secrets.CLIENTSECRET }}" --tenant "${{ secrets.TENANT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID }}
            FACTORY_NAME="adf-psasdi-westus-dev-01"
            RESOURCE_GROUP="rg-psas-decision-intelligence-westus-dev"
          elif [[ $ENVIRONMENT == 'qa' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_QAT }}" --password "${{ secrets.CLIENT_SECRET_QAT }}" --tenant "${{ secrets.TENANT_ID_QAT }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_QAT }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_QAT }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_QAT }}"
          elif [[ $ENVIRONMENT == 'prod' ]]; then
            az login --service-principal --username "${{ secrets.CLIENT_ID_PROD }}" --password "${{ secrets.CLIENT_SECRET_PROD }}" --tenant "${{ secrets.TENANT_ID_PROD }}"
            az account set -s ${{ secrets.SUBSCRIPTION_ID_PROD }}
            FACTORY_NAME="${{ secrets.FACTORY_NAME_PROD }}"
            RESOURCE_GROUP="${{ secrets.RESOURCE_GROUP_PROD }}"
          fi

          echo "Logged in successfully"

          # Process changed files and deploy pipelines
          for file in ${{ steps.changed-files-since.outputs.all_changed_files }}; do
            if [[ $file == *'.json' ]]; then
              echo "Deploying pipeline: $file"
              pipeline_name=${file##*/}
              pipeline_name=${pipeline_name%.*}  # Remove the file extension
              az datafactory pipeline create --factory-name $FACTORY_NAME --pipeline $file --name $pipeline_name --resource-group $RESOURCE_GROUP
            fi
          done
