name: Master Deployment Workflow_3

on:
  workflow_dispatch:
    inputs:
      deployment_context:
        description: 'Combined input for branch, environment, and function name (e.g., main:dev:MPB-MNC)'
        type: string
        required: true
        default: ''
      date:
        description: 'Deploy changes after a commit date (YYYY-MM-DD)'
        type: string
        required: true
        default: '1999-01-01'
      databricks_deployment_steps:
        description: 'Select Databricks deployment step'
        type: choice
        options:
          - none
          - ddl
          - dml
          - all
        required: false
        default: 'none'
      adf_pipelines_deployment_steps:
        description: 'Select ADF Pipelines deployment step'
        type: choice
        options:
          - none
          - all
          - landing
          - bronze
          - silver
          - gold
          - master
          - miscellaneous
        required: false
        default: 'none'
      deploy_linked_service:
        description: 'Deploy ADF Linked Services'
        type: boolean
        required: false
      deploy_datasets:
        description: 'Deploy ADF Datasets'
        type: boolean
        required: false
      deploy_triggers:
        description: 'Deploy ADF Triggers'
        type: boolean
        required: false
      deploy_dataflows:
        description: 'Deploy ADF Dataflows'
        type: boolean
        required: false

env:
  DATE: ${{ inputs.date }}

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Deployment Context Values
        id: extract_values
        run: |
          DEPLOYMENT_CONTEXT="${{ inputs.deployment_context }}"
          
          # Extract branch, environment, and function_name using colon ':' separator
          BRANCH="${DEPLOYMENT_CONTEXT%%:*}"  # Extract everything before the first colon
          ENV="${DEPLOYMENT_CONTEXT#*:}"      # Remove everything up to and including the first colon
          ENV="${ENV%%:*}"                    # Now remove everything after the next colon to get the environment
          FUNCTION_NAME="${DEPLOYMENT_CONTEXT##*:}"  # Extract everything after the last colon

          # Set the values to environment variables
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo "FUNCTION_NAME=$FUNCTION_NAME" >> $GITHUB_ENV

          # Output for debugging
          echo "BRANCH: $BRANCH"
          echo "ENV: $ENV"
          echo "FUNCTION_NAME: $FUNCTION_NAME"

      - name: Check if branch is set
        run: |
          if [ -z "${{ inputs.branch }}" ]; then
            echo "Branch is not set. Please provide a valid branch name."
            exit 1
          fi

  trigger_workflows:
    name: Trigger Deployment Workflows
    needs: validate_inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}  # Directly reference inputs.branch instead of env.BRANCH

      # Trigger Databricks Deployment
      - name: Trigger Databricks Deployment
        if: ${{ inputs.databricks_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.branch }}", "inputs": {"environment": "${{ inputs.environment }}", "date": "${{ inputs.date }}", "databricks_deployment_steps": "${{ inputs.databricks_deployment_steps }}", "function_name": "${{ inputs.function_name }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/databricks.yml/dispatches

      # Trigger ADF Pipelines Deployment
      - name: Trigger ADF Pipelines Deployment
        if: ${{ inputs.adf_pipelines_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.branch }}", "inputs": {"environment": "${{ inputs.environment }}", "date": "${{ inputs.date }}", "adf_pipelines_deployment_steps": "${{ inputs.adf_pipelines_deployment_steps }}", "function_name": "${{ inputs.function_name }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_pipelines.yml/dispatches

      # Trigger ADF Linked Services Deployment
      - name: Trigger ADF Linked Services Deployment
        if: ${{ inputs.deploy_linked_service == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.branch }}", "inputs": {"environment": "${{ inputs.environment }}", "date": "${{ inputs.date }}", "function_name": "${{ inputs.function_name }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_linked_service.yml/dispatches

      # Trigger ADF Datasets Deployment
      - name: Trigger ADF Datasets Deployment
        if: ${{ inputs.deploy_datasets == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.branch }}", "inputs": {"environment": "${{ inputs.environment }}", "date": "${{ inputs.date }}", "function_name": "${{ inputs.function_name }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataset.yml/dispatches

      # Trigger ADF Triggers Deployment
      - name: Trigger ADF Triggers Deployment
        if: ${{ inputs.deploy_triggers == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.branch }}", "inputs": {"environment": "${{ inputs.environment }}", "date": "${{ inputs.date }}", "function_name": "${{ inputs.function_name }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_trigger.yml/dispatches

      # Trigger ADF Dataflows Deployment
      - name: Trigger ADF Dataflows Deployment
        if: ${{ inputs.deploy_dataflows == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.branch }}", "inputs": {"environment": "${{ inputs.environment }}", "date": "${{ inputs.date }}", "function_name": "${{ inputs.function_name }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataflows.yml/dispatches
