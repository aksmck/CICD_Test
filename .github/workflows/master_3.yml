name: Master Deployment Workflow_testing

on:
  workflow_dispatch:
    inputs:
      deployment_config:
        description: 'Enter BRANCH, ENVIRONMENT, and DATA SOURCE (e.g., {"branch": "", "environment": "dev", "source": ""})'
        type: string
        required: true
        default: >-
          {
            "branch": "",
            "environment": "dev",
            "source": ""
          }
      date:
        description: 'Deploy changes after a commit date (YYYY-MM-DD)'
        type: string
        default: '1999-01-01'
        required: true
      databricks_deployment_steps:
        description: 'Select Databricks deployment step'
        type: choice
        options:
          - none
          - ddl
          - dml
          - all
        required: false
        default: 'none'
      adf_pipelines_deployment_steps:
        description: 'Select ADF Pipelines deployment step'
        type: choice
        options:
          - none
          - all
          - landing
          - bronze
          - silver
          - gold
          - master
          - miscellaneous
        required: false
        default: 'none'
      deploy_linked_service:
        description: 'Deploy ADF Linked Services'
        type: boolean
        required: false
      deploy_datasets:
        description: 'Deploy ADF Datasets'
        type: boolean
        required: false
      deploy_triggers:
        description: 'Deploy ADF Triggers'
        type: boolean
        required: false
      deploy_dataflows:
        description: 'Deploy ADF Dataflows'
        type: boolean
        required: false
      trigger_adf_pipelines:
        description: 'Whether to trigger ADF Pipelines after deployment'
        type: boolean
        required: false
        default: false  # Default to false so it doesn't trigger unless the user opts for it

env:
  DATE: ${{ inputs.date }}

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Parse Deployment Configuration
        id: parse_config
        run: |
          CONFIG_JSON=${{ inputs.deployment_config }}
          echo "Parsing deployment configuration: $CONFIG_JSON"
          BRANCH=$(jq -r '.branch' <<< "$CONFIG_JSON")
          SOURCE=$(jq -r '.source' <<< "$CONFIG_JSON")
          ENVIRONMENT=$(jq -r '.environment' <<< "$CONFIG_JSON")
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "SOURCE=$SOURCE" >> $GITHUB_ENV
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV

      - name: Validate Date Format
        run: |
          if ! [[ "$DATE" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Invalid date format. Use YYYY-MM-DD."
            exit 1
          fi

      - name: Validate Future Date
        run: |
          if [[ "$DATE" > "$(date +%Y-%m-%d)" ]]; then
            echo "The specified date is in the future. Provide a valid past date."
            exit 1
          fi

      - name: Validate Environment Based on Branch
        run: |
          if [[ "$BRANCH" != "main" && "$ENVIRONMENT" == "prod" ]]; then
            echo "Production environment can only be deployed from the 'main' branch."
            exit 1
          fi
          if [[ "$BRANCH" != "qa" && "$BRANCH" != "main" && "$ENVIRONMENT" == "qa" ]]; then
            echo "QA environment can only be deployed from the 'qa' or 'main' branch."
            exit 1
          fi

      - name: Validate Function Name
        run: |
          if [[ -z "$SOURCE" ]]; then
            echo "Data source (function_name) cannot be empty."
            exit 1
          fi

  trigger_workflows:
    name: Trigger Deployment Workflows
    needs: validate_inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}

      # Trigger Databricks Deployment
      - name: Trigger Databricks Deployment
        if: ${{ inputs.databricks_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "databricks_deployment_steps": "'${{ inputs.databricks_deployment_steps }}'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/databricks.yml/dispatches

      # Trigger ADF Pipelines Deployment
      - name: Trigger ADF Pipelines Deployment
        if: ${{ inputs.adf_pipelines_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "adf_pipelines_deployment_steps": "'${{ inputs.adf_pipelines_deployment_steps }}'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_pipelines.yml/dispatches

      # Trigger ADF Pipelines Trigger Step
      - name: Trigger ADF Pipelines Trigger Step
        if: ${{ inputs.adf_pipelines_trigger_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "adf_pipelines_trigger_steps": "'${{ inputs.adf_pipelines_trigger_steps }}'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_pipelines_trigger.yml/dispatches

      # Trigger ADF Linked Services Deployment
      - name: Trigger ADF Linked Services Deployment
        if: ${{ inputs.deploy_linked_service == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_linked_service.yml/dispatches

      # Trigger ADF Datasets Deployment
      - name: Trigger ADF Datasets Deployment
        if: ${{ inputs.deploy_datasets == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataset.yml/dispatches

      # Trigger ADF Triggers Deployment
      - name: Trigger ADF Triggers Deployment
        if: ${{ inputs.deploy_triggers == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_trigger.yml/dispatches

      # Trigger ADF Dataflows Deployment
      - name: Trigger ADF Dataflows Deployment
        if: ${{ inputs.deploy_dataflows == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataflows.yml/dispatches

      # Trigger ADF Pipelines After Deployment
      - name: Trigger ADF Pipelines After Deployment
        if: ${{ inputs.trigger_adf_pipelines == true }}
        run: |
          echo "Triggering ADF Pipelines for ${{ env.SOURCE }}"
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'${{ env.BRANCH }}'", "inputs": {"environment": "'${{ env.ENVIRONMENT }}'", "date": "'$DATE'", "function_name": "'${{ env.SOURCE }}'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_pipelines_trigger.yml/dispatches
