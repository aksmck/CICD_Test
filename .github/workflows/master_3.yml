name: Master Deployment Workflow_Testing

on:
  workflow_dispatch:
    inputs:
      deployment_config:
        description: 'Enter BRANCH, ENVIRONMENT, and SOURCE (e.g., {"BRANCH": "main", "ENV": "prod", "SOURCE": "SA_INSIGHTS"})'
        type: string
        required: true
        default: >-
          {"BRANCH": "main",
            "ENV": "dev",
            "SOURCE": ""}
      date:
        description: 'Deploy changes after a commit date (YYYY-MM-DD)'
        type: string
        default: '1999-01-01'
        required: true

env:
  DEFAULT_BRANCH: main
  DATE: ${{ inputs.date }}

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Parse Deployment Configuration
        id: parse_config
        run: |
          CONFIG_JSON='${{ inputs.deployment_config }}'
          echo "Parsing deployment configuration: $CONFIG_JSON"
          BRANCH=$(echo "$CONFIG_JSON" | jq -r '.BRANCH // env.DEFAULT_BRANCH')
          SOURCE=$(echo "$CONFIG_JSON" | jq -r '.SOURCE')
          ENV=$(echo "$CONFIG_JSON" | jq -r '.ENV')
          echo "BRANCH=${BRANCH:-$DEFAULT_BRANCH}" >> $GITHUB_ENV
          echo "SOURCE=$SOURCE" >> $GITHUB_ENV
          echo "ENV=$ENV" >> $GITHUB_ENV

      - name: Validate Branch Exists
        run: |
          BRANCH=${{ env.BRANCH }}
          if ! git ls-remote --heads origin "refs/heads/$BRANCH" | grep -q "refs/heads/$BRANCH"; then
            echo "Branch '$BRANCH' does not exist in the repository."
            exit 1
          fi

      - name: Validate Date Format
        run: |
          if ! [[ "${{ env.DATE }}" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Invalid date format. Use YYYY-MM-DD."
            exit 1
          fi
