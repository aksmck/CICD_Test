name: Master Deployment Workflow_testing

on:
  workflow_dispatch:
    inputs:
      deployment_info:
        description: 'Enter BRANCH, ENV, and SOURCE (e.g., {"BRANCH": "main", "ENV": "prod", "SOURCE": "SA_INSIGHTS"})'
        type: string
        required: true
        default: '{"BRANCH": "main", "ENV": "prod", "SOURCE": ""}'
      date:
        description: 'Deploy changes after a commit date (YYYY-MM-DD)'
        type: string
        default: '1999-01-01'
        required: true
      databricks_deployment_steps:
        description: 'Select Databricks deployment step'
        type: choice
        options:
          - none
          - ddl
          - dml
          - all
        required: false
        default: 'none'
      adf_pipelines_deployment_steps:
        description: 'Select ADF Pipelines deployment step'
        type: choice
        options:
          - none
          - all
          - landing
          - bronze
          - silver
          - gold
          - master
          - miscellaneous
        required: false
        default: 'none'
      deploy_linked_service:
        description: 'Deploy ADF Linked Services'
        type: boolean
        required: false
      deploy_datasets:
        description: 'Deploy ADF Datasets'
        type: boolean
        required: false
      deploy_triggers:
        description: 'Deploy ADF Triggers'
        type: boolean
        required: false
      deploy_dataflows:
        description: 'Deploy ADF Dataflows'
        type: boolean
        required: false

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Parse Deployment Info JSON
        id: parse_json
        run: |
          echo "BRANCH=$(echo '${{ inputs.deployment_info }}' | jq -r .BRANCH)" >> $GITHUB_ENV
          echo "ENV=$(echo '${{ inputs.deployment_info }}' | jq -r .ENV)" >> $GITHUB_ENV
          echo "SOURCE=$(echo '${{ inputs.deployment_info }}' | jq -r .SOURCE)" >> $GITHUB_ENV

      - name: Validate Date Format
        run: |
          if ! [[ "${{ inputs.date }}" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Invalid date format. Use YYYY-MM-DD."
            exit 1
          fi

      - name: Validate Future Date
        run: |
          if [[ "${{ inputs.date }}" > "$(date +%Y-%m-%d)" ]]; then
            echo "The specified date is in the future. Provide a valid past date."
            exit 1
          fi

      - name: Validate ENV Based on BRANCH
        run: |
          if [[ "${{ inputs.BRANCH }}" != "main" && "${{ inputs.ENV }}" == "prod" ]]; then
            echo "Production ENV can only be deployed from the 'main' BRANCH."
            exit 1
          fi
          if [[ "${{ inputs.BRANCH }}" != "qa" && "${{ inputs.BRANCH }}" != "main" && "${{ inputs.ENV }}" == "qa" ]]; then
            echo "QA ENV can only be deployed from the 'qa' or 'main' BRANCH."
            exit 1
          fi

      - name: Validate Function Name
        run: |
          if [[ -z "${{ inputs.SOURCE }}" ]]; then
            echo "Data source (SOURCE) cannot be empty."
            exit 1
          fi

      - name: Validate Deployment Inputs
        run: |
          if [[ "${{ inputs.deploy_linked_service }}" == "true" || "${{ inputs.deploy_datasets }}" == "true" || "${{ inputs.deploy_dataflows }}" == "true" ]]; then
            if [[ "${{ inputs.SOURCE }}" == "none" ]]; then
              echo "If deploying linked services, datasets, or dataflows, a valid function name must be provided."
              exit 1
            fi
          fi

  trigger_workflows:
    name: Trigger Deployment Workflows
    needs: validate_inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.BRANCH }}

      # Trigger Databricks Deployment
      - name: Trigger Databricks Deployment
        if: ${{ inputs.databricks_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.BRANCH }}", "inputs": {"ENV": "${{ inputs.ENV }}", "date": "${{ inputs.date }}", "databricks_deployment_steps": "${{ inputs.databricks_deployment_steps }}", "SOURCE": "${{ inputs.SOURCE }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/databricks.yml/dispatches

      # Trigger ADF Pipelines Deployment
      - name: Trigger ADF Pipelines Deployment
        if: ${{ inputs.adf_pipelines_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.BRANCH }}", "inputs": {"ENV": "${{ inputs.ENV }}", "date": "${{ inputs.date }}", "adf_pipelines_deployment_steps": "${{ inputs.adf_pipelines_deployment_steps }}", "SOURCE": "${{ inputs.SOURCE }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_pipelines.yml/dispatches

      # Trigger ADF Linked Services Deployment
      - name: Trigger ADF Linked Services Deployment
        if: ${{ inputs.deploy_linked_service == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.BRANCH }}", "inputs": {"ENV": "${{ inputs.ENV }}", "date": "${{ inputs.date }}", "SOURCE": "${{ inputs.SOURCE }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_linked_service.yml/dispatches

      # Trigger ADF Datasets Deployment
      - name: Trigger ADF Datasets Deployment
        if: ${{ inputs.deploy_datasets == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.BRANCH }}", "inputs": {"ENV": "${{ inputs.ENV }}", "date": "${{ inputs.date }}", "SOURCE": "${{ inputs.SOURCE }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataset.yml/dispatches

      # Trigger ADF Triggers Deployment
      - name: Trigger ADF Triggers Deployment
        if: ${{ inputs.deploy_triggers == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.BRANCH }}", "inputs": {"ENV": "${{ inputs.ENV }}", "date": "${{ inputs.date }}", "SOURCE": "${{ inputs.SOURCE }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_trigger.yml/dispatches

      # Trigger ADF Dataflows Deployment
      - name: Trigger ADF Dataflows Deployment
        if: ${{ inputs.deploy_dataflows == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/${{ inputs.BRANCH }}", "inputs": {"ENV": "${{ inputs.ENV }}", "date": "${{ inputs.date }}", "SOURCE": "${{ inputs.SOURCE }}"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataflows.yml/dispatches
