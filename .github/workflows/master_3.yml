name: Master Deployment Workflow_3

on:
  workflow_dispatch:
    inputs:
      deployment_context:
        description: 'Combined input for branch, environment, and function name (e.g., main:dev:MPB-MNC)'
        type: string
        required: true
        default: ''
      date:
        description: 'Deploy changes after a commit date (YYYY-MM-DD)'
        type: string
        required: true
        default: '1999-01-01'
      databricks_deployment_steps:
        description: 'Select Databricks deployment step'
        type: choice
        options:
          - none
          - ddl
          - dml
          - all
        required: false
        default: 'none'
      adf_pipelines_deployment_steps:
        description: 'Select ADF Pipelines deployment step'
        type: choice
        options:
          - none
          - all
          - landing
          - bronze
          - silver
          - gold
          - master
          - miscellaneous
        required: false
        default: 'none'
      deploy_linked_service:
        description: 'Deploy ADF Linked Services'
        type: boolean
        required: false
      deploy_datasets:
        description: 'Deploy ADF Datasets'
        type: boolean
        required: false
      deploy_triggers:
        description: 'Deploy ADF Triggers'
        type: boolean
        required: false
      deploy_dataflows:
        description: 'Deploy ADF Dataflows'
        type: boolean
        required: false

env:
  DATE: ${{ inputs.date }}

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Deployment Context Values
        id: extract_values
        run: |
          DEPLOYMENT_CONTEXT="${{ inputs.deployment_context }}"
          
          # Extract branch, environment, and function_name using colon ':' separator
          if [[ "$DEPLOYMENT_CONTEXT" =~ ^([^:]+):([^:]+):(.+)$ ]]; then
            BRANCH="${BASH_REMATCH[1]}"
            ENV="${BASH_REMATCH[2]}"
            FUNCTION_NAME="${BASH_REMATCH[3]}"
          else
            echo "Error: Invalid deployment context format"
            exit 1
          fi

          # Set the values to environment variables
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo "FUNCTION_NAME=$FUNCTION_NAME" >> $GITHUB_ENV

      - name: Validate Date Format
        run: |
          if ! [[ "${{ inputs.date }}" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Invalid date format. Use YYYY-MM-DD."
            exit 1
          fi

      - name: Validate Future Date
        run: |
          if [[ "${{ inputs.date }}" > "$(date +%Y-%m-%d)" ]]; then
            echo "The specified date is in the future. Provide a valid past date."
            exit 1
          fi

      - name: Validate Environment Based on Branch
        run: |
          if [[ "$BRANCH" != "main" && "$ENV" == "prod" ]]; then
            echo "Production environment can only be deployed from the 'main' branch."
            exit 1
          fi
          if [[ "$BRANCH" != "qa" && "$BRANCH" != "main" && "$ENV" == "qa" ]]; then
            echo "QA environment can only be deployed from the 'qa' or 'main' branch."
            exit 1
          fi

      - name: Validate Function Name
        run: |
          if [[ -z "$FUNCTION_NAME" ]]; then
            echo "Data source (function_name) cannot be empty."
            exit 1
          fi

      - name: Validate Deployment Inputs
        run: |
          if [[ "${{ inputs.deploy_linked_service }}" == "true" || "${{ inputs.deploy_datasets }}" == "true" || "${{ inputs.deploy_dataflows }}" == "true" ]]; then
            if [[ "$FUNCTION_NAME" == "none" ]]; then
              echo "If deploying linked services, datasets, or dataflows, a valid function name must be provided."
              exit 1
            fi
          fi

  trigger_workflows:
    name: Trigger Deployment Workflows
    needs: validate_inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: $BRANCH

      # Debug BRANCH Value
      - name: Debug BRANCH Value
        run: |
          echo "BRANCH: $BRANCH"
          if [ -z "$BRANCH" ]; then
            echo "Error: BRANCH is empty. Please ensure the deployment context is correct."
            exit 1
          fi

      # Trigger Databricks Deployment
      - name: Trigger Databricks Deployment
        if: ${{ inputs.databricks_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/$BRANCH", "inputs": {"environment": "$ENV", "date": "${{ inputs.date }}", "databricks_deployment_steps": "${{ inputs.databricks_deployment_steps }}", "function_name": "$FUNCTION_NAME"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/databricks.yml/dispatches

      # Trigger ADF Pipelines Deployment
      - name: Trigger ADF Pipelines Deployment
        if: ${{ inputs.adf_pipelines_deployment_steps != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/$BRANCH", "inputs": {"environment": "$ENV", "date": "${{ inputs.date }}", "adf_pipelines_deployment_steps": "${{ inputs.adf_pipelines_deployment_steps }}", "function_name": "$FUNCTION_NAME"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_pipelines.yml/dispatches

      # Trigger ADF Linked Services Deployment
      - name: Trigger ADF Linked Services Deployment
        if: ${{ inputs.deploy_linked_service == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/$BRANCH", "inputs": {"environment": "$ENV", "date": "${{ inputs.date }}", "function_name": "$FUNCTION_NAME"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_linked_service.yml/dispatches

      # Trigger ADF Datasets Deployment
      - name: Trigger ADF Datasets Deployment
        if: ${{ inputs.deploy_datasets == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/$BRANCH", "inputs": {"environment": "$ENV", "date": "${{ inputs.date }}", "function_name": "$FUNCTION_NAME"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataset.yml/dispatches

      # Trigger ADF Triggers Deployment
      - name: Trigger ADF Triggers Deployment
        if: ${{ inputs.deploy_triggers == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/$BRANCH", "inputs": {"environment": "$ENV", "date": "${{ inputs.date }}", "function_name": "$FUNCTION_NAME"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_trigger.yml/dispatches

      # Trigger ADF Dataflows Deployment
      - name: Trigger ADF Dataflows Deployment
        if: ${{ inputs.deploy_dataflows == true }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/$BRANCH", "inputs": {"environment": "$ENV", "date": "${{ inputs.date }}", "function_name": "$FUNCTION_NAME"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/adf_dataflows.yml/dispatches
