name: Master Deployment Workflow_testing

on:
  workflow_dispatch:
    inputs:
      config:
        description: 'Configuration in JSON format'
        type: string
        required: true
        default: >-
          {
            "branch": "main",
            "environment": "dev",
            "function_name": "MPB-MNC",
            "date": "1999-01-01",
            "databricks_deployment_steps": "none",
            "adf_pipelines_deployment_steps": "none",
            "adf_pipelines_trigger_steps": "none",
            "deploy_linked_service": false,
            "deploy_datasets": false,
            "deploy_triggers": false,
            "deploy_dataflows": false
          }

env:
  CONFIG: ${{ inputs.config }}

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Parse Inputs
        id: parse
        run: |
          echo "Parsing configuration..."
          CONFIG_JSON=${{ inputs.config }}
          echo "CONFIG=${CONFIG_JSON}" >> $GITHUB_ENV
          echo "BRANCH=$(jq -r '.branch' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "ENVIRONMENT=$(jq -r '.environment' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "FUNCTION_NAME=$(jq -r '.function_name' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "DATE=$(jq -r '.date' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "DATABRICKS_STEPS=$(jq -r '.databricks_deployment_steps' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "ADF_STEPS=$(jq -r '.adf_pipelines_deployment_steps' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "TRIGGER_STEPS=$(jq -r '.adf_pipelines_trigger_steps' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "DEPLOY_LINKED_SERVICE=$(jq -r '.deploy_linked_service' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "DEPLOY_DATASETS=$(jq -r '.deploy_datasets' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "DEPLOY_TRIGGERS=$(jq -r '.deploy_triggers' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV
          echo "DEPLOY_DATAFLOWS=$(jq -r '.deploy_dataflows' <<< "${CONFIG_JSON}")" >> $GITHUB_ENV

      - name: Validate Date Format
        run: |
          if ! [[ "$DATE" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Invalid date format. Use YYYY-MM-DD."
            exit 1
          fi

      - name: Validate Future Date
        run: |
          if [[ "$DATE" > "$(date +%Y-%m-%d)" ]]; then
            echo "The specified date is in the future. Provide a valid past date."
            exit 1
          fi

      - name: Validate Environment Based on Branch
        run: |
          if [[ "$BRANCH" != "main" && "$ENVIRONMENT" == "prod" ]]; then
            echo "Production environment can only be deployed from the 'main' branch."
            exit 1
          fi
          if [[ "$BRANCH" != "qa" && "$BRANCH" != "main" && "$ENVIRONMENT" == "qa" ]]; then
            echo "QA environment can only be deployed from the 'qa' or 'main' branch."
            exit 1
          fi

  trigger_workflows:
    name: Trigger Deployment Workflows
    needs: validate_inputs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: $BRANCH

      # Trigger Databricks Deployment
      - name: Trigger Databricks Deployment
        if: ${{ env.DATABRICKS_STEPS != 'none' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"ref": "refs/heads/'$BRANCH'", "inputs": {"environment": "'$ENVIRONMENT'", "date": "'$DATE'", "databricks_deployment_steps": "'$DATABRICKS_STEPS'", "function_name": "'$FUNCTION_NAME'"}}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/databricks.yml/dispatches

      # Similar blocks for ADF deployments, adjusted for the new inputs...
