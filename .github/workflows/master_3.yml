name: Master Deployment Workflow_testing

on:
  workflow_dispatch:
    inputs:
      deployment_config:
        description: 'Deployment configuration in JSON format (e.g., {"branch": "main", "source": "MPB-MNC", "environment": "dev"})'
        type: string
        required: true
        default: >-
          {
            "branch": "main",
            "source": "MPB-MNC",
            "environment": "dev"
          }
      date:
        description: 'Deploy changes after a commit date (YYYY-MM-DD)'
        type: string
        default: '1999-01-01'
        required: true
      databricks_deployment_steps:
        description: 'Select Databricks deployment step'
        type: choice
        options:
          - none
          - ddl
          - dml
          - all
        required: false
        default: 'none'
      adf_pipelines_deployment_steps:
        description: 'Select ADF Pipelines deployment step'
        type: choice
        options:
          - none
          - all
          - landing
          - bronze
          - silver
          - gold
          - master
          - miscellaneous
        required: false
        default: 'none'
      adf_pipelines_trigger_steps:
        description: 'Select ADF Pipelines trigger step'
        type: choice
        options:
          - none
          - all
          - landing
          - bronze
          - silver
          - gold
          - master
          - miscellaneous
        required: false
        default: 'none'
      deploy_linked_service:
        description: 'Deploy ADF Linked Services'
        type: boolean
        required: false
      deploy_datasets:
        description: 'Deploy ADF Datasets'
        type: boolean
        required: false
      deploy_triggers:
        description: 'Deploy ADF Triggers'
        type: boolean
        required: false
      deploy_dataflows:
        description: 'Deploy ADF Dataflows'
        type: boolean
        required: false

env:
  DATE: ${{ inputs.date }}

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Parse Deployment Configuration
        id: parse_config
        run: |
          CONFIG_JSON=${{ inputs.deployment_config }}
          echo "Parsing deployment configuration: $CONFIG_JSON"
          BRANCH=$(jq -r '.branch' <<< "$CONFIG_JSON")
          SOURCE=$(jq -r '.source' <<< "$CONFIG_JSON")
          ENVIRONMENT=$(jq -r '.environment' <<< "$CONFIG_JSON")
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "SOURCE=$SOURCE" >> $GITHUB_ENV
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV

      - name: Validate Date Format
        run: |
          if ! [[ "$DATE" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            echo "Invalid date format. Use YYYY-MM-DD."
            exit 1
          fi

      - name: Validate Future Date
        run: |
          if [[ "$DATE" > "$(date +%Y-%m-%d)"
